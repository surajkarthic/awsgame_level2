pipeline {
    // Define the agent for the entire pipeline
    agent {
        // Use a Docker agent
        docker {
            image 'jenkins/jenkins:lts-jdk11'
            // Run the container as the root user to allow package installation
            args '-u root -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker -v /usr/local/bin/aws:/usr/local/bin/aws -v /opt/aws-cli:/opt/aws-cli'
        }
    }

    environment {
        AWS_REGION = "ap-south-1"
        ECR_REPO_NAME = "my-app-repo"
        // Add the local bin directory (where pip installs tools) to the system PATH
        PATH = "/var/jenkins_home/.local/bin:${env.PATH}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Setup Tools') {
            steps {
                sh '''
                    echo "Updating package manager and installing Python..."
                    # This command will now succeed because we are running as root
                    apt-get update && apt-get install -y python3-pip

                    echo "Installing Ansible and the Docker collection..."
                    python3 -m pip install --user ansible boto3 botocore
                    
                    # Use the newly installed ansible-galaxy to get the docker collection
                    ansible-galaxy collection install community.docker
                '''
