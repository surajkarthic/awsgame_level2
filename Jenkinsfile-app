pipeline {
    // This pipeline will run on any available Jenkins agent
    agent any

    // Define environment variables that we will use throughout the pipeline
    environment {
        // The AWS region where our ECR repository exists
        AWS_REGION = "ap-south-1"
        // The name of our ECR repository (must match what's in CloudFormation)
        ECR_REPO_NAME = "my-app-repo"
        // We will get the AWS Account ID dynamically
        AWS_ACCOUNT_ID = ""
        // Define the full ECR image name and tag it with the build number
        IMAGE_NAME = "${ECR_REPO_NAME}:${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                // Clones your GitHub repository into the Jenkins workspace
                checkout scm
            }
        }

        stage('Set AWS Account ID') {
            steps {
                // This script dynamically gets the AWS Account ID from the EC2 metadata
                // This makes the pipeline portable and secure
                sh 'echo "Getting AWS Account ID..."'
                script {
                    AWS_ACCOUNT_ID = sh(script: 'aws sts get-caller-identity --query Account --output text', returnStdout: true).trim()
                    env.IMAGE_NAME = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:${BUILD_NUMBER}"
                }
                sh 'echo "Image will be tagged as: ${IMAGE_NAME}"'
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                sh '''
                    echo "Building the Docker image..."
                    # Build the Docker image from our Dockerfile
                    docker build -t ${IMAGE_NAME} .

                    echo "Logging into Amazon ECR..."
                    # Log in to the ECR registry. The password is provided by the AWS CLI.
                    aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com

                    echo "Pushing image to ECR..."
                    # Push the built image to our repository
                    docker push ${IMAGE_NAME}

                    echo "Image push complete!"
                '''
            }
        }
    }

    post {
        success {
            echo "CI pipeline completed successfully for image: ${IMAGE_NAME}"
        }
        failure {
            echo "CI pipeline failed."
        }
    }
}
