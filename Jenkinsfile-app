pipeline {
    // Define the agent for the entire pipeline
    agent {
        docker {
            // Use your new custom-built agent image
            image '529624055993.dkr.ecr.ap-south-1.amazonaws.com/my-jenkins-agent:latest'
            // We still need the args to connect to the host's Docker service
            args '-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker'
        }
    }

    environment {
        AWS_REGION = "ap-south-1"
        ECR_REPO_NAME = "my-app-repo"
    }

    stages {
        stage('Checkout Code') {
            // No need to clean the workspace anymore as we get a fresh container every time
            steps {
                checkout scm
            }
        }

        // The 'Setup Tools' stage is GONE!

        stage('Build, Push, and Deploy') {
            steps {
                script {
                    def awsAccountId = sh(script: 'aws sts get-caller-identity --query Account --output text', returnStdout: true).trim()
                    def imageName = "${awsAccountId}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:${BUILD_NUMBER}"

                    // Build and Push the APPLICATION image
                    sh "docker build -t '${imageName}' ."
                    sh "aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${awsAccountId}.dkr.ecr.${AWS_REGION}.amazonaws.com"
                    sh "docker push '${imageName}'"
                    
                    // Deploy the APPLICATION
                    sh "export ANSIBLE_HOST_KEY_CHECKING=False && ansible-playbook -i inventory/hosts playbooks/deploy-app.yml --extra-vars 'image_to_deploy=${imageName}'"
                }
            }
        }
    }
}
