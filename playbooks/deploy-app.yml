---
- name: Deploy Docker Container to EC2
  hosts: my-app-stack-ec2
  become: yes
  gather_facts: no
  vars:
    image_to_deploy: "default-image:latest"
    aws_region: "ap-south-1"
  tasks:
    - name: Debug deployed image var
      debug:
        var: image_to_deploy

    # Use raw commands to avoid Python version issues
    - name: Install Python3 and pip using raw command
      raw: |
        yum update -y
        yum install -y python3 python3-pip docker
        pip3 install docker
        systemctl start docker
        systemctl enable docker
        usermod -aG docker ec2-user
      register: install_result
      
    - name: Wait for services to start
      pause:
        seconds: 10
        
    # Now we can use Docker modules since Python3 is installed
    - name: Pull the latest application image from ECR
      community.docker.docker_image:
        name: "{{ image_to_deploy }}"
        source: pull
      vars:
        ansible_python_interpreter: /usr/bin/python3
        
    - name: Stop the existing application container if it exists
      community.docker.docker_container:
        name: "my-app-container"
        state: absent
      vars:
        ansible_python_interpreter: /usr/bin/python3
      ignore_errors: yes
        
    - name: Run the new application container
      community.docker.docker_container:
        name: "my-app-container"
        image: "{{ image_to_deploy }}"
        state: started
        restart_policy: always
        ports:
          - "80:5000"
      vars:
        ansible_python_interpreter: /usr/bin/python3
